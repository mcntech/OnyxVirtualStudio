/*
 * File: app/view/ArchiveDetails.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.view.ArchiveDetails', {
    extend: 'Ext.Panel',
    alias: 'widget.archivedetails',

    config: {
        id: 'ArchiveDetails',
        scrollable: 'vertical',
        cls: [
            'archiveDetails'
        ],
        tpl: [
            '<div class="poster"><img src="data:image/jpeg;base64,{poster}"></div>',
            '',
            '<p class="synopsis">{synopsis}</p>'
        ],
        items: [
            {
                xtype: 'toolbar',
                docked: 'bottom',
                itemId: 'streamviewbar',
                items: [
                    {
                        xtype: 'button',
                        handler: function(button, event) {
                            var data = button.getData();
                            window.location = data.urlhq;

                        },
                        id: 'archiveviewhq',
                        itemId: 'mybutton6',
                        text: 'HQ Channel'
                    },
                    {
                        xtype: 'button',
                        handler: function(button, event) {
                            var data = button.getData();
                            window.location = data.urllq;

                        },
                        id: 'archiveviewsd',
                        text: 'SD Channel'
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onArchiveDetailsUpdatedata',
                event: 'updatedata'
            }
        ]
    },

    onArchiveDetailsUpdatedata: function(component, newData, options) {
        this.SetChildrenData(component, newData);
    },

    SetChildrenData: function(component, data) {
        var me = this;
        component.getItems().each(function(item) {
            if(typeof item.setData == 'function'){
                item.setData(data);
            }

            //set record on all subitems
            if(typeof item.getItems == 'function'){
                var subItems = item.getItems();
                if(subItems.getCount() > 0){
                    me.SetChildrenData(item, data);
                }
            }
        });
    }

});